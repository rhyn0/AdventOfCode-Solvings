[tool.poetry]
name = "RO-AdventOfCode"
version = "0.5.0"
description = "Solvings for Advent of Code years"
authors = ["Ryan Ozawa <ryan.ozawa21@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
advent-of-code-data = "^2.0.1"
docopt = "^0.6.2"
numpy = "^1.24.2"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.2.1"
black = "^24.3.0"
mypy = "^1.8.0"
ruff = "^0.3.4"


[tool.poetry.group.test.dependencies]
pytest = "^7.2.2"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
# Enable autofix for rules that support it.
fix = true
# Indent width for long-line violations
indent-width = 4
# Same as Black.
line-length = 88

output-format = "concise"

required-version = ">=0.3.4"
# Show fixes in the output.
show-fixes = true
target-version = "py310"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# all rules are fixable
fixable = ["ALL"]
ignore = [
    "D100",   # Missing docstring in public module
    "TCH003", # Type checking block
]
select = [
    "E",
    "F",
    "W",   # pycodestyle warnings
    "C90", # Mccabe complexity
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "G",   # flake8-logging
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PD",  # pandas vet
    "TRY", # tryceratops,
    "PLR", # pylint: refactor
    "RUF",
]
unfixable = []


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"aoc_solvings/src_2022/day19.py" = ["E501"]
"aoc_solvings/src_2021/day8.py" = ["PLR2004"]
"aoc_solvings/src_2021/day16.py" = ["D101", "D102", "D105", "D107"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.isort]
force_sort_within_sections = true
force_single_line = true
known_first_party = ["common", "aoc_solvings"]
# this new option doesn't work quite yet
# import_headings = { "STDLIB" = "Standard Library Ruff", "THIRDPARTY" = "External Party", "FIRSTPARTY" = "My Modules" }
import_heading_stdlib = "Standard Library"
import_heading_thirdparty = "External Party"
import_heading_firstparty = "My Modules"
profile = "black"
group_by_package = true

[tool.mypy]
python_version = "3.10"
warn_unreachable = true
warn_unused_ignores = true
warn_unused_configs = true
disable_error_code = "import-untyped"
packages = "aoc_solvings"
ignore_missing_imports = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
